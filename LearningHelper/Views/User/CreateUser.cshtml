@using System.Collections.Generic
@using System.Net.Mime
@using System.Web.Optimization
@using LearningHelper.Models
@model Learning.Models.User

@{
    ViewBag.Title = "User";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<Address> addresses = ViewBag.Divs;

}
@section title
{
    <title>Create User</title>
}

<h2 style="text-align: center;">User Registration Form</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.Gender, "1") Male
                @Html.RadioButtonFor(model => model.Gender, "2") Female<br />
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "datepicker form-control", autocomplete = "off" } })

                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DivCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(d => d.DivCode, new SelectList(addresses, "DivCode", "DivName"), "<--Select Division-->", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DivCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DisCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(d => d.DisCode, new SelectList(""), "<--Select District-->", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DisCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(d => d.Location, new SelectList(""), "<--Select Thana-->", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UserType, new List<SelectListItem>() { new SelectListItem { Text = "Learner", Value = "1" }, new SelectListItem { Text = "Trainer", Value = "2" } }, "Select UserType", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create Account" class="btn btn-outline-danger float-right" />
                <a href="~/User/LoginUser" class="btn btn-default">Back To Login Page</a>
            </div>
        </div>


    </div>


    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>


    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script>
        $(function () {
            $(".datepicker").datepicker({
                changeMonth: true,
                changeYear: true,
                yearRange: "1950:2015",
                dateFormat: 'yy/mm/dd'
            });
        });

        $(document).ready(function() {
            $("#DivCode").change(function () {
                var dept;
                var divCode = $("#DivCode").val();
                var json = { DivCode: divCode };

                $("#DisCode").empty();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DistrictDetails", "User")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),

                    success: function (result) {
                        $('#DisCode').append('<option value="">--Select District--</option>');
                        $.each(result,
                            function (key, value) {
                                $('#DisCode').append('<option value="' + value.DisCode + '">' + value.District + '</option>');
                            });
                    }
                });

            });
            $("#DisCode").change(function () {
                var dept;
                var disCode = $("#DisCode").val();
                var json = { DisCode: disCode };

                $("#Location").empty();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("ThanaDetails", "User")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),

                    success: function (result) {
                        $('#Location').append('<option value="">--Select Thana--</option>');
                        $.each(result,
                            function (key, value) {
                                $('#Location').append('<option value="' + value.ThanaCode + '">' + value.Thana + '</option>');
                            });
                    }
                });

            });
            $(function () {
                $(".datepicker").datepicker({
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "1950:2015",
                    dateFormat: 'yy/mm/dd'
                });
            });
        });
    </script>

}
